clear variables; close all;
files = { ...
    'pred_ACC_Rule Response_spline.mat', ...
    'pred_dlPFC_Rule Response_spline.mat', ...
    };
predictor = 'mutualInformation';
comparisonModel = {    's(Rule * Previous Error, Trial Time, knotDiff=50) + s(Response Direction, Trial Time, knotDiff=50)'  };
modelsOfInterest = {...
    's(Previous Error, Trial Time, knotDiff=50) + s(Response Direction, Trial Time, knotDiff=50)', ...
    's(Rule * Rule Repetition, Trial Time, knotDiff=50) + s(Response Direction, Trial Time, knotDiff=50)', ...
    's(Rule * Previous Error, Trial Time, knotDiff=50) + s(Response Direction, Trial Time, knotDiff=50) + s(Rule * Rule Repetition, Trial Time, knotDiff=50)', ...
    's(Rule * Previous Error, Trial Time, knotDiff=50) + s(Response Direction, Trial Time, knotDiff=50) + s(Rule * Rule Repetition, Trial Time, knotDiff=50) + s(Congruency, Trial Time, knotDiff=50)', ...
    };
for file_ind = 1:length(files),
  specificModelComparison(files{file_ind}, predictor, comparisonModel, modelsOfInterest)
end